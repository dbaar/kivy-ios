--- matplotlib-2.0.0-orig/setup.py	2017-01-21 14:37:40.000000000 +0100
+++ matplotlib-2.0.0/setup.py	2017-01-17 03:56:43.000000000 +0100
@@ -65,57 +65,57 @@ mpl_packages = [
     setupext.Matplotlib(),
     setupext.Python(),
     setupext.Platform(),
-    #'Required dependencies and extensions',
-    # setupext.Numpy(),
-    # setupext.Six(),
-    # setupext.Dateutil(),
-    # setupext.FuncTools32(),
-    # setupext.Subprocess32(),
-    # setupext.Pytz(),
-    # setupext.Cycler(),
-    # setupext.Tornado(),
-    # setupext.Pyparsing(),
-    # setupext.LibAgg(),
-    # setupext.FreeType(),
-    # setupext.FT2Font(),
-    # setupext.Png(),
-    # setupext.Qhull(),
-    # setupext.Image(),
-    # setupext.TTConv(),
-    # setupext.Path(),
-    # setupext.ContourLegacy(),
-    # setupext.Contour(),
-    # setupext.Delaunay(),
-    # setupext.QhullWrap(),
-    # setupext.Tri(),
-    # 'Optional subpackages',
-    # setupext.SampleData(),
-    # setupext.Toolkits(),
-    # setupext.Tests(),
-    # setupext.Toolkits_Tests(),
-    # 'Optional backend extensions',
-    # # These backends are listed in order of preference, the first
-    # # being the most preferred.  The first one that looks like it will
-    # # work will be selected as the default backend.
-    # setupext.BackendMacOSX(),
-    # setupext.BackendQt5(),
-    # setupext.BackendQt4(),
-    # setupext.BackendGtk3Agg(),
-    # setupext.BackendGtk3Cairo(),
-    # setupext.BackendGtkAgg(),
-    # setupext.BackendTkAgg(),
-    # setupext.BackendWxAgg(),
-    # setupext.BackendGtk(),
-    # setupext.BackendAgg(),
-    # setupext.BackendCairo(),
-    # setupext.Windowing(),
-    # 'Optional LaTeX dependencies',
-    # setupext.DviPng(),
-    # setupext.Ghostscript(),
-    #setupext.LaTeX(),
-    #setupext.PdfToPs(),
-    #'Optional package data',
-    #setupext.Dlls(),
+    'Required dependencies and extensions',
+    setupext.Numpy(),
+    setupext.Six(),
+    setupext.Dateutil(),
+    setupext.FuncTools32(),
+    setupext.Subprocess32(),
+    setupext.Pytz(),
+    setupext.Cycler(),
+    setupext.Tornado(),
+    setupext.Pyparsing(),
+    setupext.LibAgg(),
+    setupext.FreeType(),
+    setupext.FT2Font(),
+    setupext.Png(),
+    setupext.Qhull(),
+    setupext.Image(),
+    setupext.TTConv(),
+    setupext.Path(),
+    setupext.ContourLegacy(),
+    setupext.Contour(),
+    setupext.Delaunay(),
+    setupext.QhullWrap(),
+    setupext.Tri(),
+    'Optional subpackages',
+    setupext.SampleData(),
+    setupext.Toolkits(),
+    setupext.Tests(),
+    setupext.Toolkits_Tests(),
+    'Optional backend extensions',
+    # These backends are listed in order of preference, the first
+    # being the most preferred.  The first one that looks like it will
+    # work will be selected as the default backend.
+    setupext.BackendMacOSX(),
+    setupext.BackendQt5(),
+    setupext.BackendQt4(),
+    setupext.BackendGtk3Agg(),
+    setupext.BackendGtk3Cairo(),
+    setupext.BackendGtkAgg(),
+    setupext.BackendTkAgg(),
+    setupext.BackendWxAgg(),
+    setupext.BackendGtk(),
+    setupext.BackendAgg(),
+    setupext.BackendCairo(),
+    setupext.Windowing(),
+    'Optional LaTeX dependencies',
+    setupext.DviPng(),
+    setupext.Ghostscript(),
+    setupext.LaTeX(),
+    setupext.PdfToPs(),
+    'Optional package data',
+    setupext.Dlls(),
     ]
